# For more information on configuration, see:
#   * Official English Documentation: http://nginx.org/en/docs/
#   * Official Russian Documentation: http://nginx.org/ru/docs/

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log;
pid /run/nginx.pid;

# Load dynamic modules. See /usr/share/doc/nginx/README.dynamic.
include /usr/share/nginx/modules/*.conf;

events {
       worker_connections 1024;
}

http {
	log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                       '$status $body_bytes_sent "$http_referer" '
		       '"$http_user_agent" "$http_x_forwarded_for"';
	access_log  /var/log/nginx/access.log  main;
	sendfile            on;
	tcp_nopush          on;
	tcp_nodelay         on;
	keepalive_timeout   65;
	types_hash_max_size 2048;
	include             /etc/nginx/mime.types;
	default_type        application/octet-stream;
	# Load modular configuration files from the /etc/nginx/conf.d directory.
	# See http://nginx.org/en/docs/ngx_core_module.html#include
	# for more information.
	include /etc/nginx/conf.d/*.conf;

	server {
	    	server_name wiki.thehxp.tech;
		listen 80;
  		rewrite ^/(.*) https://$server_name/$1 permanent;
	}

	server {
		server_name wiki.thehxp.tech;
		listen 443 ssl;
		ssl_certificate "/etc/pki/nginx/wiki/server.crt";
		ssl_certificate_key "/etc/pki/nginx/wiki/private/server.key";

		location / {
			proxy_pass https://en.wikipedia.org;
			proxy_buffering off;
			proxy_cookie_domain en.wikipedia.org wiki.thehxp.tech;
			proxy_redirect https://en.wikipedia.org/ /;
			proxy_redirect https://en.m.wikipedia.org/ https://m-wiki.thehxp.tech/;
			proxy_set_header X-Real_IP $remote_addr;
			proxy_set_header User-Agent $http_user_agent;
			proxy_set_header Accept-Encoding '';
			proxy_set_header referer "https://en.wikipedia.org$request_uri";
			sub_filter_types text/css text/xml text/javascript;
			#sub_filter '维基百科' '维基百科镜像';
			sub_filter en.wikipedia.org wiki.thehxp.tech;
			sub_filter upload.wikimedia.org up-wiki.thehxp.tech;
			sub_filter en.m.wikipedia.org m-wiki.thehxp.tech;
		}
	
		location https://en.m.wikipedia.org/{
			rewrite ^/(.*) https://m-wiki.thehxp.tech/$1 permanent;
		}
	}

	server {
		server_name m-wiki.thehxp.tech;
		listen 80;
		rewrite ^/(.*) https://$server_name/$1 permanent;
	}

	server {
		server_name m-wiki.thehxp.tech;
		listen 443 ssl;
		ssl_certificate "/etc/pki/nginx/m-wiki/server.crt";
		ssl_certificate_key "/etc/pki/nginx/m-wiki/private/server.key";

		location / {
			proxy_pass https://en.m.wikipedia.org;
			proxy_buffering off;
			proxy_redirect https://en.m.wikipedia.org/ /;
			proxy_cookie_domain en.m.wikipedia.org m-wiki.thehxp.tech;
			proxy_set_header X-Real_IP $remote_addr;
			proxy_set_header User-Agent $http_user_agent;
			proxy_set_header Accept-Encoding '';
			proxy_set_header referer "https://en.m.wikipedia.org$request_uri";
			sub_filter_types text/css text/xml text/javascript;
			#sub_filter '维基百科' '维基百科镜像';
			sub_filter en.wikipedia.org wiki.thehxp.tech;
			sub_filter en.m.wikipedia.org m-wiki.thehxp.tech;
			sub_filter upload.wikimedia.org up-wiki.thehxp.tech;
		}
	}

	server {
		server_name up-wiki.thehxp.tech;
		listen 80;
		rewrite ^/(.*) https://$server_name/$1 permanent;
	}

	server {
		server_name up-wiki.thehxp.tech;
		listen 443 ssl;
		ssl_certificate "/etc/pki/nginx/up-wiki/server.crt";
		ssl_certificate_key "/etc/pki/nginx/up-wiki/private/server.key";

		location / {
			proxy_pass https://upload.wikimedia.org;
			proxy_cookie_domain upload.wikimedia.org up-wiki.thehxp.tech;
			proxy_buffering off;
			proxy_set_header X-Real_IP $remote_addr;
			proxy_set_header User-Agent $http_user_agent;
			proxy_set_header referer "https://upload.wikimedia.org$request_uri";
		}
	}


	server {
	        listen 80;
		server_name google.thehxp.tech;
		return 301 https://google.thehxp.tech$request_uri;          
    	}


	server {
	        listen       443 ssl;
		ssl on;
		server_name  google.thehxp.tech;
		ssl_certificate "/etc/pki/nginx/google/server.crt";
		ssl_certificate_key "/etc/pki/nginx/google/private/server.key";
		ssl_protocols         TLSv1 TLSv1.1 TLSv1.2;
		ssl_ciphers           HIGH:!aNULL:!MD5;
        	if ($http_user_agent ~* (baiduspider|360spider|haosouspider|googlebot|soso|bing|sogou|yahoo|sohu-search|yodao|YoudaoBot|robozilla|msnbot|MJ12bot|NHN|Twiceler)) {
	                return  403;
        	}

		if ($scheme != "https") {
			return 301 https://$host$request_uri;
		}

		location / {
			proxy_redirect off;
			proxy_cookie_domain google.com.hk google.thehxp.tech;
			proxy_pass https://www.google.com.hk/;
			proxy_connect_timeout 60s;
			proxy_read_timeout 5400s;
			proxy_send_timeout 5400s;
			proxy_set_header Host "www.google.com.hk";
			proxy_set_header User-Agent $http_user_agent;
			proxy_set_header Referer https://www.google.com.hk/;
			proxy_set_header Accept-Encoding "";
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Proto https;
			proxy_set_header Accept-Language "en-US";
			#proxy_set_header Cookie "PREF=ID=047808f19f6de346:U=0f62f33dd8549d11:FF=2:LD=en-US:NW=1:TM=1325338577:LM=1332142444:GM=1:SG=2:S=rE0SyJh2W1IQ-Maw";
			sub_filter https://www.google.com.hk/ https://google.thehxp.tech/;
			sub_filter https://www.google.com/ https://google.thehxp.tech/;
			#sub_filter_types text/css text/xml text/javascript;
			sub_filter_once off;
		}
	}

	# Settings for a TLS enabled server.

  	server {
	        listen 80;
        	server_name thehxp.tech;
        	return 301 https://thehxp.tech$request_uri;
    	}   

    	server {
               listen       443 ssl;
	       ssl on;
               server_name  thehxp.tech;
               ssl_certificate "/etc/pki/nginx/server.crt";
               ssl_certificate_key "/etc/pki/nginx/private/server.key";
	       ssl_protocols         TLSv1 TLSv1.1 TLSv1.2;
	       ssl_ciphers           HIGH:!aNULL:!MD5;
	       if ($scheme != "https") {
	               return 301 https://$host$request_uri;
	       }


        # Load configuration files for the default server block.
	
		location /ray { # 与 V2Ray 配置中的 path 保持一致
			 proxy_redirect off;
			 proxy_pass http://127.0.0.1:10000;#假设WebSocket监听在环回地址的10000端口上
			 proxy_http_version 1.1;
			 proxy_set_header Upgrade $http_upgrade;
			 proxy_set_header Connection "upgrade";
			 proxy_set_header Host $http_host;
			 # Show realip in v2ray access.log
			 proxy_set_header X-Real-IP $remote_addr;
			 proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		}		 

        	location / {
			 proxy_pass         http://127.0.0.1:4000/;
			 proxy_redirect     off;
			 proxy_set_header   User-Agent "Mozilla/5.0";
			 proxy_set_header   Host                        $host;
			 proxy_set_header   X-Real-IP                $remote_addr;
			 proxy_set_header   X-Forwarded-For    $proxy_add_x_forwarded_for;
		}

        	error_page 404 /404.html;
            		   location = /40x.html {
        	}

		error_page 500 502 503 504 /50x.html;
			   location = /50x.html {
		}
	}
}

